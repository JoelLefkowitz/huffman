// Generated by purs version 0.13.8
"use strict";
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Huffman_Occurances = require("../Huffman.Occurances/index.js");
var Huffman_Symbol = require("../Huffman.Symbol/index.js");
var Test_Assert = require("../Test.Assert/index.js");
var testOccurances = function __do() {
    Test_Assert.assertEqual(Huffman_Occurances.eqOccurances)(Huffman_Occurances.showOccurances)({
        actual: Huffman_Occurances.countOccurances(""),
        expected: Data_Map_Internal.empty
    })();
    Test_Assert.assertEqual(Huffman_Occurances.eqOccurances)(Huffman_Occurances.showOccurances)({
        actual: Huffman_Occurances.countOccurances("a"),
        expected: Huffman_Occurances.Occurances(Data_Map_Internal.singleton("a")(1))
    })();
    Test_Assert.assertEqual(Huffman_Occurances.eqOccurances)(Huffman_Occurances.showOccurances)({
        actual: Huffman_Occurances.countOccurances("ab"),
        expected: Huffman_Occurances.Occurances(Data_Map_Internal.fromFoldable(Huffman_Symbol.ordSymbol)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("a", 1), new Data_Tuple.Tuple("b", 1) ]))
    })();
    return Test_Assert.assertEqual(Huffman_Occurances.eqOccurances)(Huffman_Occurances.showOccurances)({
        actual: Huffman_Occurances.countOccurances("abb"),
        expected: Huffman_Occurances.Occurances(Data_Map_Internal.fromFoldable(Huffman_Symbol.ordSymbol)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("a", 1), new Data_Tuple.Tuple("b", 2) ]))
    })();
};
module.exports = {
    testOccurances: testOccurances
};
