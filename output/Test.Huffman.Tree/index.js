// Generated by purs version 0.13.8
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Show = require("../Data.Show/index.js");
var Huffman_Occurances = require("../Huffman.Occurances/index.js");
var Huffman_Tree = require("../Huffman.Tree/index.js");
var Huffman_Weights = require("../Huffman.Weights/index.js");
var Test_Assert = require("../Test.Assert/index.js");
var tree = function ($0) {
    return Huffman_Tree.fromWeights(Huffman_Weights.fromOccurances(Huffman_Occurances.countOccurances($0)));
};
var testTree = function __do() {
    Test_Assert.assertEqual(Data_Eq.eqString)(Data_Show.showString)({
        actual: Data_Show.show(Huffman_Tree.showHuffmanTree)(new Huffman_Tree.Node([ new Huffman_Tree.Leaf("a", 0.5), new Huffman_Tree.Leaf("b", 0.5) ], 1.0)),
        expected: "[a: 0.5, b: 0.5]: 1.0"
    })();
    Test_Assert.assertEqual(Huffman_Tree.eqHuffmanTree)(Huffman_Tree.showHuffmanTree)({
        actual: tree(""),
        expected: new Huffman_Tree.Node([  ], 1.0)
    })();
    Test_Assert.assertEqual(Huffman_Tree.eqHuffmanTree)(Huffman_Tree.showHuffmanTree)({
        actual: tree("a"),
        expected: new Huffman_Tree.Node([ new Huffman_Tree.Leaf("a", 1.0) ], 1.0)
    })();
    Test_Assert.assertEqual(Huffman_Tree.eqHuffmanTree)(Huffman_Tree.showHuffmanTree)({
        actual: tree("ab"),
        expected: new Huffman_Tree.Node([ new Huffman_Tree.Leaf("a", 0.5), new Huffman_Tree.Leaf("b", 0.5) ], 1.0)
    })();
    Test_Assert.assertEqual(Huffman_Tree.eqHuffmanTree)(Huffman_Tree.showHuffmanTree)({
        actual: tree("abcc"),
        expected: new Huffman_Tree.Node([ new Huffman_Tree.Node([ new Huffman_Tree.Leaf("a", 0.25), new Huffman_Tree.Leaf("b", 0.25) ], 0.5), new Huffman_Tree.Leaf("c", 0.5) ], 1.0)
    })();
    return Test_Assert.assertEqual(Huffman_Tree.eqHuffmanTree)(Huffman_Tree.showHuffmanTree)({
        actual: tree("abcdefgh"),
        expected: new Huffman_Tree.Node([ new Huffman_Tree.Node([ new Huffman_Tree.Node([ new Huffman_Tree.Leaf("c", 0.125), new Huffman_Tree.Leaf("d", 0.125) ], 0.25), new Huffman_Tree.Node([ new Huffman_Tree.Leaf("a", 0.125), new Huffman_Tree.Leaf("b", 0.125) ], 0.25) ], 0.5), new Huffman_Tree.Node([ new Huffman_Tree.Node([ new Huffman_Tree.Leaf("g", 0.125), new Huffman_Tree.Leaf("h", 0.125) ], 0.25), new Huffman_Tree.Node([ new Huffman_Tree.Leaf("e", 0.125), new Huffman_Tree.Leaf("f", 0.125) ], 0.25) ], 0.5) ], 1.0)
    })();
};
module.exports = {
    tree: tree,
    testTree: testTree
};
